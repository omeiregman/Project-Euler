package prolemsOne_Ten;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 */

public class Fibonacci_recursion {

	public static void main(String[] args) {
		
//		int N = 15;
//		for (int i = 1; i <= N; i++){
//			System.out.println(i + ": " + getFib(i));
//		}
//		
//		while (N < 100){
//			S
//		}
//		
//	}
//	
//	public static long getFib(int n) {
//			if (n <= 1)
//				return n;
//			else
//				return getFib(n-1) + getFib(n-2);
//	}
	
		
		int firstValue = 1;
		int secondValue= 2;
		int temp = 0;
		int evenFeb =0;
		int sentinel = 4000000;
		
		
		while (temp < sentinel){
			int halfTemp = firstValue + secondValue;
			if (halfTemp <= sentinel){
				temp = halfTemp;} else {
					break;
				}
			firstValue = secondValue;
			secondValue = temp;
			//System.out.println("Feb Series: "+ temp);
			
			if (temp%2 == 0){
				evenFeb += temp;
				
				
			}
		}System.out.println("Even Feb: " + evenFeb);
		
		
		
}

}