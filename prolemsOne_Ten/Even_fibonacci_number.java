package prolemsOne_Ten;


/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 */

public class Even_fibonacci_number {

	
	public static void main(String[] args) {
		
		int febCount = 40;
		long feb[] = new long[febCount];
		feb[0] = 1;
		feb [1] = 2;
		long sum = 0;
		
		System.out.println(feb[0] +"\n" +feb[1]);
		for (int i = 2; i<=febCount-1; i++) { 
			feb[i] = feb[i-1]+ feb[i-2];
			System.out.println("Feb " + (i)+ " : " + feb[i]);
		}
		
		
		
		for (int i = 0; i<feb.length-1; i++) {
			
			if (feb[i]%2 == 0 && feb[i]<4000000) {
				//sum = sum + feb[i];
				System.out.println("Even Feb series: " + feb[i]);
				
				sum+=feb[i];
				
				
				//System.out.println("sum: " +sum);
			}
		}
		System.out.println("Sum of Even Fibonacci Series: " +sum);
	}
	
	
}
